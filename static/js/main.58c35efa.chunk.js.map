{"version":3,"sources":["image/profile.jpg","image/main1.png","Components/Loading.js","Components/qraphql/STAR_REPOSITORY.js","Components/RepositoriesList/Star.js","Components/qraphql/UNSTAR.js","Components/RepositoriesList/UnStar.js","Components/RepositoriesList/RepositoryList.js","Components/qraphql/GET_LOGIN.js","Components/Profile/Profile.js","Components/MainPage/Main.js","Components/Header/Header.js","Components/Search/UserList.js","Components/qraphql/SEARCH_USER.js","Components/Search/SearchByUser.js","Components/Search/RepoList.js","Components/qraphql/SEARCH_REPO.js","Components/Search/SearchByRepositories.js","Components/qraphql/FOLLOW.js","Components/Follow/Follow.js","Components/qraphql/UNFOLLOW.js","Components/Follow/UnFollow.js","Components/qraphql/GET_USER.js","Components/Search/User.js","Components/qraphql/GET_REPOSITORY.js","Components/Search/Repository.js","Components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Loading","style","width","height","position","left","top","viewBox","xmlns","fill","d","transform","attributeName","values","begin","dur","repeatCount","STAR_REPOSITORY","gql","Star","id","node","mutation","variables","starRepository","Icon","color","onClick","UNSTAR_REPOSITORY","UnStar","unStarRepository","useStyles","makeStyles","card","margin","float","borderRadius","background","boxShadow","cursor","transition","bullet","display","title","fontSize","pos","marginBottom","RepositoryList","data","classes","edges","map","url","from","search","to","length","newUrl","substring","Card","className","key","CardContent","name","CardActions","Button","marginTop","viewerHasStarred","stargazers","totalCount","GET_LOGIN","Profile","localStorage","getItem","textAlign","fontFamily","marginLeft","fontWeight","size","src","profile","alt","query","viewer","loading","Paper","Avatar","avatarUrl","variant","Typography","componxent","component","login","repositories","Main","main1","border","React","Component","theme","root","flexGrow","menuButton","marginRight","spacing","withRouter","history","useState","open","setOpen","value","setValue","handleClose","AppBar","Toolbar","href","Fragment","clear","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","type","fullWidth","onChange","e","target","DialogActions","setItem","push","UserList","CardActionArea","gutterBottom","textDecoration","bio","styles","iconStyle","SEARCH_USER","SearchByUser","input","setInput","padding","event","queryString","error","RepoList","owner","SEARCH_REPO","SearchByRepository","FOLLOW","Follow","followUser","backgroundColor","UN_FOLLOW","Unfollow","unfollowUser","GET_USER","User","useParams","viewerIsFollowing","GET_REPOSITORY","Repository","repo","repositoryOwner","repository","description","omponent","watchers","forks","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","cache","InMemoryCache","httpLink","HttpLink","uri","authLink","setContext","_","a","async","headers","token","authorization","client","ApolloClient","link","concat","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.58c35efa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.dcef3abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main1.f96a5fbf.png\";","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Loading = () => {\r\n    return <div style={{\r\n        width: '213',\r\n        height: '213',\r\n        position: 'absolute', left: '43%', top: '35%'\r\n    }}>\r\n        <svg viewBox=\"0 0 512 512\" width=\"212\" height=\"212\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m332.289429,87.087219c60.033295,-20.366676 114.402222,-21.83609 172.935547,1.047241l-11.403595,32.850952c-43.333344,-15.5 -104.147491,-15.984329 -148.480804,-0.734329\"\r\n                  transform=\"rotate(45 418.757 96.1885)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m398.527466,246.388596c60.033325,-20.366684 114.402222,-21.83609 172.935547,1.047241l-11.403564,32.850967c-43.333374,-15.500031 -104.147491,-15.984344 -148.480835,-0.734344\"\r\n                  transform=\"rotate(90 484.995 255.49)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.125s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m331.332214,404.823669c60.033325,-20.366699 114.402252,-21.83609 172.935547,1.047241l-11.403534,32.850952c-43.333405,-15.500031 -104.147522,-15.984344 -148.480865,-0.734344\"\r\n                  transform=\"rotate(135 417.8 413.925)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.250s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m171.58223,470.323669c60.03331,-20.366699 114.402237,-21.83609 172.935532,1.047241l-11.403534,32.850952c-43.333405,-15.500031 -104.147522,-15.984344 -148.48085,-0.734344\"\r\n                  transform=\"rotate(180 258.05 479.425)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.375s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m13.0822,406.074005c60.033301,-20.367004 114.401801,-21.835999 172.935805,1.046997l-11.404007,32.850983c-43.332993,-15.5 -104.147301,-15.983978 -148.480589,-0.733978\"\r\n                  transform=\"rotate(-135 99.55 415.175)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.500s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m-53.713486,247.091553c60.03331,-20.367004 114.40181,-21.835999 172.935806,1.046997l-11.404022,32.850983c-43.332977,-15.5 -104.147277,-15.983978 -148.480576,-0.733978\"\r\n                  transform=\"rotate(-90 32.754 256.193)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.625s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m12.883621,87.061485c60.033295,-20.366669 114.402206,-21.836082 172.935562,1.047249l-11.403595,32.850952c-43.333344,-15.5 -104.147507,-15.984329 -148.48082,-0.734337\"\r\n                  transform=\"rotate(-45 99.3514 96.1628)\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.750s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m172.906631,20.929741c60.03331,-20.366681 114.402206,-21.836091 172.935562,1.04723l-11.403595,32.85096c-43.333344,-15.5 -104.147507,-15.984322 -148.48082,-0.734329\">\r\n                <animate attributeName=\"fill\" values=\"#2088ff;#fff;#2088ff;#2088ff\" begin=\"0.875s\" dur=\"1s\"\r\n                         repeatCount=\"indefinite\"/>\r\n            </path>\r\n            <path fill=\"#2088ff\"\r\n                  d=\"m197.75,459.850006c0,0 -0.125,-48.75 -0.125,-48.850006c0,-0.100006 -4.75,-4.399994 -33,-1c-28.25,3.399994 -62.5,-66.649994 -65.25,-69.75c-2.75,-3.100006 14,-5.649994 26.5,5c12.5,10.649994 38.25,33.350006 38.5,33.25c0.25,-0.100006 31.75,0.600006 31.75,0.5c0,-0.100006 3,-44.149994 20.75,-37.5c17.75,6.649994 -72.5,1.350006 -97.75,-61.25c-25.25,-62.600006 19.25,-124.899994 20.25,-115.399994c1,9.5 -17,-35 -10.25,-46.850006c6.75,-11.849998 19.25,-9.400002 30.25,-5.5c11,3.900002 34.25,20.350006 39.25,21.25c5,0.899994 18.25,-8.150002 59.25,-7.5c41,0.650002 52.769196,6.138474 56.75,6.5c3.980804,0.361526 30.519165,-17.38076 38.250061,-22.557701c7.730896,-5.176941 18.653595,-9.092308 28.653687,0.78849c10.000092,9.880798 4.923157,67.00383 3.096252,55.519211c-1.826904,-11.484619 36.25,70.600006 6,122.100006c-30.25,51.5 -99.25,52.75 -87.75,55.899994c11.5,3.149994 15,33.350006 14.75,49.850006l-0.25,65.899994l-22.875,3.875l-0.5,-74.75c0.125,-9.225006 -9.125,-10.649994 -9.625,-9.75l-0.25,85.875l-21.25,1.25l-0.25,-86.75l-10.5,0l0,86.5l-20.75,-1l-0.25,-84.25c0,-0.100006 -8.75,-1.149994 -8.25,10.75l-0.5,72.25\"/>\r\n        </svg>\r\n    </div>\r\n};\r\nexport default Loading;\r\n\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const STAR_REPOSITORY = gql`\r\n  mutation($id: ID!) {\r\n    addStar(input: { starrableId: $id }) {\r\n      starrable {\r\n        id\r\n        viewerHasStarred\r\n             stargazers{\r\n            totalCount\r\n            }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {Mutation} from \"react-apollo\";\r\nimport React from \"react\";\r\nimport {Icon} from \"@material-ui/core\";\r\nimport {STAR_REPOSITORY} from \"../qraphql/STAR_REPOSITORY\";\r\n\r\nconst Star = ({node}) => {\r\n    const {id} = node;\r\n    return <Mutation mutation={STAR_REPOSITORY} variables={{id}}>\r\n        {starRepository => (\r\n            <Icon color=\"action\"\r\n                  onClick={starRepository}>\r\n                favorite\r\n            </Icon>\r\n        )}\r\n    </Mutation>\r\n};\r\nexport default Star;","import gql from \"graphql-tag\";\r\n\r\nexport const UNSTAR_REPOSITORY = gql`\r\n  mutation($id: ID!) {\r\n    removeStar(input: { starrableId: $id }) {\r\n      starrable {\r\n        id\r\n        viewerHasStarred\r\n         stargazers{\r\n            totalCount\r\n            }\r\n      }\r\n    }\r\n  }\r\n`;","import {Mutation} from \"react-apollo\";\r\nimport React from \"react\";\r\nimport {Icon} from \"@material-ui/core\";\r\nimport {UNSTAR_REPOSITORY} from \"../qraphql/UNSTAR\";\r\n\r\nconst UnStar = ({node}) => {\r\n    const {id} = node;\r\n    return <Mutation mutation={UNSTAR_REPOSITORY} variables={{id}}>\r\n        {unStarRepository => (\r\n            <Icon color=\"secondary\"\r\n                  onClick={unStarRepository}>\r\n                favorite\r\n            </Icon>\r\n        )}\r\n    </Mutation>\r\n};\r\nexport default UnStar;","import React from \"react\";\r\nimport '../App';\r\nimport Star from \"./Star\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Card, CardActions, CardContent} from \"@material-ui/core\";\r\nimport UnStar from \"./UnStar\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        width: 410,\r\n        height: 163,\r\n        margin: 15,\r\n        float:'left',\r\n        borderRadius: '4px',\r\n        background: '#fff',\r\n        boxShadow:'0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05)',\r\n        cursor: 'pointer',\r\n        transition: '.3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst RepositoryList = ({data}) => {\r\n    const classes = useStyles();\r\n    return <ul>\r\n        {data.edges.map(({node}) => {\r\n            let url =(`${node.url}`);\r\n            let from = url.search('.com/')+5;\r\n            let to = url.length;\r\n            let newUrl = url.substring(from, to);\r\n\r\n            return (\r\n                <div style={{\r\n                    width: '1400px',\r\n                    margin: '0 auto'\r\n                }}>\r\n                <Card className={classes.card}>\r\n                            <li key={node.id} >\r\n                                <CardContent>\r\n                                    <Link  style={{\r\n                                        fontSize:24\r\n                                    }} to= {`/repository/${newUrl}`}>\r\n                                        {node.name}\r\n                                    </Link>\r\n                                </CardContent>\r\n                                <CardActions>\r\n\r\n                                    <Button style={{marginTop: '34px'}}>\r\n                                        {node.viewerHasStarred ? (<UnStar node={node}/>) : (<Star node={node}/>)}\r\n                                        {node.stargazers.totalCount}\r\n                                    </Button>\r\n                                    <div>\r\n                                    </div>\r\n                                </CardActions>\r\n                            </li>\r\n                        </Card>\r\n                </div>\r\n            );\r\n        })}\r\n    </ul>\r\n};\r\nexport default RepositoryList;","import gql from \"graphql-tag\";\r\n\r\nexport const GET_LOGIN = gql`\r\n   {\r\n      viewer {\r\n        login\r\n        name\r\n        avatarUrl\r\n        url\r\n        bio\r\n        repositories(first: 20) {\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            url\r\n            viewerHasStarred\r\n             stargazers{\r\n            totalCount\r\n            }\r\n          }\r\n        }\r\n      }\r\n      }\r\n    }\r\n`;\r\n","import {Query} from \"react-apollo\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Loading from \"../Loading\";\r\nimport RepositoryList from \"../RepositoriesList/RepositoryList\";\r\nimport profile from \"../../image/profile.jpg\";\r\nimport SearchIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport {GET_LOGIN} from \"../qraphql/GET_LOGIN\";\r\n\r\n\r\nconst Profile = () => {\r\n    if (localStorage.getItem(\"token\") == null)\r\n        return <div>\r\n            <h2 style={{\r\n                textAlign: 'center',\r\n                fontFamily: ' -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica,Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji',\r\n                fontSize: 35,\r\n                marginLeft: 30,\r\n                fontWeight: 'normal',\r\n                color: '#24292e'\r\n            }}>Please log in <SearchIcon style={{size: 25, color: '#a3aab1'}}/>\r\n            </h2>\r\n            <img src={profile} width={'650'} height={'540'} style={{\r\n                display: 'block',\r\n                margin: '0 auto',\r\n                marginTop: -10\r\n            }} alt={\"profilepage\"}/>\r\n        </div>\r\n    return <Query query={GET_LOGIN}>\r\n\r\n        {({data: {viewer}, loading}) => {\r\n            if (loading || !viewer) {\r\n                return <Loading/>\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Paper style={{\r\n                        width: '300px',\r\n                        height: '400px',\r\n                        marginTop: '20px',\r\n                        marginLeft: '30px'\r\n                    }}>\r\n                        <Avatar src={viewer.avatarUrl}\r\n                                variant=\"rounded\"\r\n                                style={{\r\n                                    width: '300px',\r\n                                    height: '340px'\r\n                                }}/>\r\n                        <Typography variant=\"h5\" componxent=\"h3\">\r\n                            {viewer.name}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            {viewer.login}\r\n                        </Typography>\r\n                    </Paper>\r\n\r\n                    <Paper>\r\n                        <Paper>\r\n                            <RepositoryList data={viewer.repositories}/>\r\n                        </Paper>\r\n                    </Paper>\r\n                </div>\r\n            );\r\n        }}\r\n    </Query>\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport main1 from \"../../image/main1.png\"\r\nimport SearchIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\n\r\nexport default class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{\r\n                    textAlign: 'center',\r\n                    fontFamily: ' -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica,Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji',\r\n                    fontSize: 35,\r\n                    marginLeft: 30,\r\n                    fontWeight: 'normal',\r\n                    color: '#24292e'\r\n                }}>Welcome to GHC<SearchIcon  style={{size:25, color:'#a3aab1'}}/></h2>\r\n                <div>\r\n                    <img src={main1} width={'1255'} height={'600'} style={{\r\n                        display: 'block',\r\n                        margin: '0 auto',\r\n                        marginTop: -37,\r\n                        border: 'none'\r\n                    }} alt={\"mainpage\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction ButtonAppBar({history}) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState(\"\");\r\n    const handleInput = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        localStorage.setItem(\"token\", value);\r\n        setValue(\"\");\r\n        history.push(\"/\");\r\n        handleClose();\r\n    };\r\n    const classes = useStyles();\r\n\r\n    const exit = () => {\r\n        localStorage.clear();\r\n    };\r\n    const IsTokenValid = () => localStorage.getItem(\"token\") && ((localStorage.getItem(\"token\").length) == 40);\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{\r\n                    background: \"#2088ff\"\r\n                }}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Button color='inherit' href=\"/\">GHC</Button>\r\n                    </Typography>\r\n                    {IsTokenValid() ? (\r\n                        <React.Fragment>\r\n                            <Button color='inherit' href=\"/searchRepository\">Search Repository</Button>\r\n                            <Button color='inherit' href=\"/searchUser\">Search User</Button>\r\n                            <Button color='inherit' href=\"/profile\">Profile</Button>\r\n                            <Button color='inherit' href=\"/\" onClick={exit}>Exit</Button>\r\n                        </React.Fragment>\r\n                    ) :  <Button color='inherit' onClick={handleClickOpen}>Login</Button>}\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <div>\r\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            value={value}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Enter token\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            onChange={handleInput}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={handleSubmit} color=\"primary\">\r\n                            Ok\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(ButtonAppBar);","import React from 'react';\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport styles from '../Search/Style.css'\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        width: 390,\r\n        height: 435,\r\n        margin: 15,\r\n        float:'left',\r\n        borderRadius: '4px',\r\n        background: '#fff',\r\n        boxShadow:'0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05)',\r\n        cursor: 'pointer',\r\n        transition: '.3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\n\r\nconst UserList = ({data}) => {\r\n    const classes = useStyles();\r\n    if (!data.search) return <h2>We couldn’t find <SearchIcon className={styles.iconStyle}/></h2>;\r\n    return <ul>\r\n        {data.search.edges.map(({node}) => {\r\n            return (\r\n                <div style={{\r\n                    width: 1300,\r\n                    display: 'block',\r\n                    margin: '0 auto'\r\n                }}>\r\n                <Card className={classes.card}>\r\n                    <li key={node.id}>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    <Link  to={`/user/${node.id}`}\r\n                                    style={{\r\n                                        textDecoration: 'none'\r\n                                    }}\r\n                                    >{node.login}</Link>\r\n                                    <Avatar src={node.avatarUrl}\r\n                                            variant=\"rounded\"\r\n                                            style={{\r\n                                               display: 'block',\r\n                                                margin: '0 auto',\r\n                                                width: '300px',\r\n                                                height: '340px'\r\n                                            }}/>\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {node.bio}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </li>\r\n                </Card>\r\n                </div>\r\n            );\r\n        })}\r\n    </ul>\r\n};\r\nexport default UserList;","import gql from \"graphql-tag\";\r\n\r\nexport const SEARCH_USER = gql`\r\nquery($queryString: String!) {\r\n  search(query: $queryString, type: USER, first: 10) {\r\n    edges {\r\n      node {\r\n        ... on User {\r\n        id\r\n          name\r\n         login\r\n         url\r\n         bio\r\n         avatarUrl\r\n          }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, {useState} from 'react';\r\nimport Query from \"react-apollo/Query\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport UserList from \"./UserList\";\r\nimport Loading from \"../Loading\";\r\nimport {SEARCH_USER} from \"../qraphql/SEARCH_USER\";\r\n\r\n\r\n\r\nconst SearchByUser = () => {\r\n    const [input, setInput] = useState(\"\");\r\n    return (<div>\r\n            <TextField id=\"standard-basic\"\r\n                       value={input}\r\n                       style={{\r\n                           padding: 5\r\n                       }}\r\n                       label=\"Search\"\r\n                       onChange={event => {\r\n                           setInput(event.target.value);\r\n                       }}> </TextField>\r\n\r\n            <Query query={SEARCH_USER} variables={{queryString: input}}>\r\n                {({loading, error, data}) => {\r\n                    if (loading) return (\r\n                        <Loading/>\r\n                    );\r\n                    if (error) return <p>Something went wrong...</p>;\r\n                    return <UserList data={data}/>\r\n                }}\r\n\r\n            </Query>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchByUser;","import React from \"react\";\r\nimport '../App';\r\nimport {Link} from 'react-router-dom';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {Button, Card, CardActions, CardContent} from \"@material-ui/core\";\r\nimport UnStar from \"../RepositoriesList/UnStar\";\r\nimport Star from \"../RepositoriesList/Star\";\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    card: {\r\n        width: 410,\r\n        height: 163,\r\n        margin: 15,\r\n        float: 'left',\r\n        borderRadius: '4px',\r\n        background: '#fff',\r\n        boxShadow: '0 6px 10px rgba(0,0,0,.08), 0 0 6px rgba(0,0,0,.05)',\r\n        cursor: 'pointer',\r\n        transition: '.3s transform cubic-bezier(.155,1.105,.295,1.12),.3s box-shadow,.3s -webkit-transform cubic-bezier(.155,1.105,.295,1.12)'\r\n    },\r\n\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nconst RepoList = ({data}) => {\r\n    const classes = useStyles();\r\n    return <ul>\r\n        {data.search.edges.map(({node}) => {\r\n            return (\r\n                <div style={{\r\n                    width: '1400px',\r\n                    margin: '0 auto'\r\n                }}>\r\n                    <Card className={classes.card}>\r\n                        <li key={node.id}>\r\n                            <CardContent>\r\n                                <Link style={{\r\n                                    fontSize: 24\r\n                                }} to={`/repository/${node.owner.login}/${node.name}`}>\r\n                                    {node.name}\r\n                                </Link>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button style={{marginTop: '34px'}}>\r\n                                    {node.viewerHasStarred ? (<UnStar node={node}/>) : (<Star node={node}/>)}\r\n                                    {node.stargazers.totalCount}\r\n                                </Button>\r\n                                <div>\r\n                                </div>\r\n                            </CardActions>\r\n                        </li>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        })}\r\n    </ul>\r\n};\r\nexport default RepoList;","import gql from \"graphql-tag\";\r\n\r\nexport const SEARCH_REPO = gql`\r\nquery($queryString: String!) {\r\n  search(query: $queryString, type: REPOSITORY, first: 10) {\r\n    repositoryCount\r\n    edges {\r\n      node {\r\n        ... on Repository {\r\n        id\r\n          name\r\n          owner{\r\n              id\r\n              login\r\n          }\r\n          descriptionHTML\r\n          viewerHasStarred\r\n          stargazers {\r\n            totalCount\r\n          }\r\n          forks {\r\n            totalCount\r\n          }\r\n          updatedAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n }\r\n `;","import React, {useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Query from \"react-apollo/Query\";\r\nimport Loading from \"../Loading\";\r\nimport RepoList from \"./RepoList\";\r\nimport {SEARCH_REPO} from \"../qraphql/SEARCH_REPO\";\r\n\r\n\r\nconst SearchByRepository = () => {\r\n    const [input, setInput] = useState(\"\");\r\n    return (<div>\r\n            <TextField id=\"standard-basic\"\r\n                       label=\"Search\"\r\n                       value={input}\r\n                       style={{\r\n                           padding: 5\r\n                       }}\r\n                       onChange={event => {\r\n                           setInput(event.target.value);\r\n\r\n                       }}> </TextField>\r\n\r\n            <Query query={SEARCH_REPO} variables={{queryString: input}}>\r\n                {({loading, error, data}) => {\r\n                    if (loading) return (\r\n                        <Loading/>\r\n                    );\r\n                    if (error) return <p>Something went wrong...</p>;\r\n                    return <RepoList data={data}/>\r\n                }}\r\n\r\n            </Query>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchByRepository;","import gql from \"graphql-tag\";\r\n\r\nexport const FOLLOW = gql`\r\n  mutation($id: ID!) {\r\n    followUser(input: { userId: $id }) {\r\n        user  {\r\n        id\r\n        login\r\n        name\r\n        avatarUrl\r\n        url\r\n        bio   \r\n         viewerIsFollowing       \r\n    }\r\n    }\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FOLLOW} from \"../qraphql/FOLLOW\";\r\n\r\nconst Follow = ({node}) => {\r\n    const {id} = node;\r\n    return <Mutation mutation={FOLLOW} variables={{id}}>\r\n        {followUser => (\r\n            <Button color=\"action\"\r\n                    onClick={followUser}\r\n                    style={{\r\n                        width:300,\r\n                        backgroundColor: '#2088ff'\r\n                    }}\r\n            >Follow</Button>\r\n        )}\r\n    </Mutation>\r\n};\r\nexport default Follow;","import gql from \"graphql-tag\";\r\n\r\nexport const UN_FOLLOW = gql`\r\n  mutation($id: ID!) {\r\n    unfollowUser(input: { userId: $id }) {\r\n        user  {\r\n        id\r\n        login\r\n        name\r\n        avatarUrl\r\n        url\r\n        bio     \r\n         viewerIsFollowing        \r\n    }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {Mutation} from \"react-apollo\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {UN_FOLLOW} from \"../qraphql/UNFOLLOW\";\r\n\r\n\r\nconst Unfollow = ({node}) => {\r\n    const {id} = node;\r\n    return <Mutation mutation={UN_FOLLOW} variables={{id}}>\r\n        {unfollowUser => (\r\n            <Button color=\"action\"\r\n                  onClick={unfollowUser}\r\n                    style={{\r\n                        width:300,\r\n                        backgroundColor: '#C0C0C0'\r\n                    }}\r\n            >\r\n                Unfollow\r\n            </Button>\r\n        )}\r\n    </Mutation>\r\n};\r\nexport default Unfollow;","import gql from \"graphql-tag\";\r\n\r\nexport const GET_USER = gql`\r\nquery($id: ID!){\r\n    node(id: $id) {\r\n        ... on User {\r\n            id\r\n            name\r\n            login\r\n            avatarUrl\r\n            url\r\n            bio\r\n            viewerIsFollowing          \r\n                repositories(first: 10\r\n                        orderBy: { direction: DESC, field: STARGAZERS }) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name\r\n                        url\r\n                         owner {\r\n                          id\r\n                          login\r\n                        }\r\n                        stargazers {\r\n                          totalCount\r\n                        }\r\n                        viewerHasStarred\r\n                        watchers {\r\n                          totalCount\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n","import {Query} from \"react-apollo\";\r\nimport React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Loading from \"../Loading\";\r\nimport RepositoryList from \"../RepositoriesList/RepositoryList\";\r\nimport Follow from \"../Follow/Follow\";\r\nimport Unfollow from \"../Follow/UnFollow\";\r\nimport {GET_USER} from \"../qraphql/GET_USER\";\r\n\r\nconst User = () => {\r\n    let {id} = useParams();\r\n    return <Query query={GET_USER} variables={{id: id}}>\r\n        {({data: {node}, loading}) => {\r\n            if (loading || !node) {\r\n                return <Loading/>\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Paper style={{\r\n                        width: '300px',\r\n                        height: '430px',\r\n                        marginTop: '20px',\r\n                        marginLeft: '30px'\r\n                    }}>\r\n                        <Avatar src={node.avatarUrl}\r\n                                variant=\"rounded\"\r\n                                style={{\r\n                                    width: '300px',\r\n                                    height: '340px'\r\n                                }}/>\r\n                        <Typography variant=\"h5\" componxent=\"h3\">\r\n                            {node.name}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            {node.login}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {node.viewerIsFollowing ? (<Unfollow node={node}/>) : (<Follow node={node}/>)}\r\n                        </Typography>\r\n                    </Paper>\r\n                    <Paper>\r\n                        <Paper>\r\n                            <RepositoryList data={node.repositories}/>\r\n                        </Paper>\r\n                    </Paper>\r\n                </div>\r\n            );\r\n        }\r\n        }\r\n    </Query>\r\n\r\n};\r\n\r\nexport default User;\r\n\r\n\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_REPOSITORY = gql`\r\nquery($login: String!, $repo: String!) {\r\n  repositoryOwner(login: $login) {\r\n    repositories {\r\n      totalCount\r\n    }\r\n    repository(name: $repo) {\r\n      id\r\n      name\r\n      createdAt \r\n      isArchived\r\n      isPrivate\r\n      url\r\n      owner{\r\n       id\r\n       login\r\n        }\r\n      description\r\n      issues {\r\n        totalCount\r\n      }\r\n      stargazers {\r\n        totalCount\r\n      }\r\n      watchers {\r\n        totalCount\r\n      }\r\n      forks{\r\n      totalCount\r\n      }\r\n       commitComments(first: 70) {\r\n          totalCount\r\n          edges{\r\n            node{\r\n                bodyText\r\n                createdAt\r\n            }\r\n          }\r\n      }\r\n      milestones(first:10) {\r\n        edges {\r\n          node {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Query} from \"react-apollo\";\r\nimport Loading from \"../Loading\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Icon} from \"@material-ui/core\";\r\nimport { GET_REPOSITORY } from \"../qraphql/GET_REPOSITORY\";\r\n\r\nconst Repository = () => {\r\n    let {login, name} = useParams();\r\n    return <Query query={GET_REPOSITORY} variables={{login: login, repo: name}}>\r\n        {({data, loading}) => {\r\n            if (loading || !data) {\r\n                return <Loading/>\r\n            }\r\n\r\n            return <div>\r\n                <div style={{\r\n                    width: '400px',\r\n                    height: '200px',\r\n                    marginTop: '20px',\r\n                    marginLeft: '30px'\r\n                }}>\r\n                    <Typography variant=\"h5\" componxent=\"h3\" style={{marginBottom: 20}}>\r\n                      Name:  {data.repositoryOwner.repository.name}\r\n                    </Typography>\r\n                    <Typography component=\"p\" style={{marginBottom: 20}}>\r\n                        Description: {data.repositoryOwner.repository.description}\r\n                    </Typography>\r\n                    <Typography omponent=\"p\">\r\n                        <Icon style={{\r\n                            fontSize:18,\r\n                            marginRight: 4,\r\n                        }}>visibility</Icon>\r\n                        Watchers: {data.repositoryOwner.repository.watchers.totalCount}\r\n                    </Typography>\r\n                    <Typography omponent=\"p\">\r\n                        <Icon style={{\r\n                            fontSize:18,\r\n                            marginRight: 4,\r\n                        }}>favorite</Icon>\r\n                        Stars: {data.repositoryOwner.repository.stargazers.totalCount}\r\n                    </Typography>\r\n                    <Typography omponent=\"p\">\r\n                        <Icon style={{\r\n                            fontSize:18,\r\n                            marginRight: 4,\r\n                        }}>call_split</Icon>\r\n                        Forks: {data.repositoryOwner.repository.forks.totalCount}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        }\r\n        }\r\n    </Query>\r\n\r\n};\r\n\r\nexport default Repository;","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport Main from \"./MainPage/Main\";\r\nimport ButtonAppBar from \"./Header/Header\";\r\nimport SearchByUser from \"./Search/SearchByUser\";\r\nimport SearchByRepository from \"./Search/SearchByRepositories\";\r\nimport User from \"./Search/User\";\r\nimport Repository from \"./Search/Repository\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <ButtonAppBar/>\r\n            <Switch>\r\n                <Route path=\"/user/:id\">\r\n                    <User/>\r\n                </Route>\r\n                <Route path=\"/searchUser\">\r\n                    <SearchByUser/>\r\n                </Route>\r\n                <Route path=\"/repository/:login/:name\">\r\n                    <Repository/>\r\n                </Route>\r\n                <Route path=\"/searchRepository\">\r\n                    <SearchByRepository/>\r\n                </Route>\r\n                <Route path=\"/profile\">\r\n                    <Profile/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Main/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { setContext } from 'apollo-link-context';\r\nimport App from './Components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport \"./index.css\"\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst GITHUB_BASE_URL = 'https://api.github.com/graphql';\r\n\r\nconst httpLink = new HttpLink({\r\n    uri: GITHUB_BASE_URL\r\n});\r\nconst authLink = setContext(async (_, { headers }) => {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n});\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache\r\n});\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}